# Academia Pro - Frontend Dockerfile
FROM node:18-alpine AS base

# Install pnpm and dependencies
RUN apk add --no-cache libc6-compat curl
RUN npm install -g pnpm

# Set working directory
WORKDIR /app

# Copy package files
COPY client/package*.json ./
COPY client/pnpm-lock.yaml ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY client/ .

# Copy common types package
COPY common/ ./common/

# Build application
RUN pnpm run build

# Production stage
FROM node:18-alpine AS production

# Install production dependencies
RUN apk add --no-cache curl

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=base --chown=nextjs:nodejs /app/.next ./.next
COPY --from=base --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=base --chown=nextjs:nodejs /app/package.json ./package.json
COPY --from=base --chown=nextjs:nodejs /app/public ./public
COPY --from=base --chown=nextjs:nodejs /app/common ./common

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Start application
CMD ["pnpm", "start"]