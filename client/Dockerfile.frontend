# Academia Pro - Frontend Dockerfile
FROM node:18-alpine AS base

# Install pnpm and dependencies
RUN apk add --no-cache libc6-compat curl
RUN npm install -g pnpm
# Harden pnpm against transient network hiccups in CI/buildkit
RUN pnpm config set fetch-retries 5 \
  && pnpm config set network-timeout 600000 \
  && pnpm config set verify-store-integrity false \
  && pnpm config set registry https://registry.npmjs.org/

# Set working directory
WORKDIR /app

# Copy package files
COPY client/package*.json ./
COPY client/pnpm-lock.yaml ./

# Copy common types package BEFORE install to satisfy link:../common
# Place it at /common so that "link:../common" from /app resolves correctly
COPY common/ /common/

# Install dependencies
RUN pnpm install --no-frozen-lockfile

# Copy source code (only required files; avoid node_modules overwrite)
COPY client/next.config.ts ./next.config.ts
COPY client/tsconfig.json ./tsconfig.json
COPY client/postcss.config.mjs ./postcss.config.mjs
COPY client/eslint.config.mjs ./eslint.config.mjs
COPY client/components.json ./components.json
COPY client/public ./public
COPY client/src ./src

# Build application (ensure shared types are compiled first)
RUN cd /common && pnpm install --no-frozen-lockfile && pnpm run build
RUN pnpm run build

# Production stage
FROM node:18-alpine AS production

# Install production dependencies and pnpm runtime
RUN apk add --no-cache curl && npm install -g pnpm

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Set working directory
WORKDIR /app

# Copy built application
COPY --from=base --chown=nextjs:nodejs /app/.next ./.next
COPY --from=base --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=base --chown=nextjs:nodejs /app/package.json ./package.json
COPY --from=base --chown=nextjs:nodejs /app/public ./public
# Preserve linked common package target for runtime (symlink resolution)
COPY --from=base --chown=nextjs:nodejs /common /common

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000 || exit 1

# Start application
CMD ["pnpm", "start"]